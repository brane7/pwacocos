System.register("chunks:///_virtual/main",["./PWAInstaller.ts","./ServiceWorker.ts"],(function(){return{setters:[null,null],execute:function(){}}}));

System.register("chunks:///_virtual/PWAInstaller.ts",["./rollupPluginModLoBabelHelpers.js","cc","./ServiceWorker.ts"],(function(t){var e,n,s,i,r,o,l,a,u,c,d,h,p,f;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,s=t.initializerDefineProperty,i=t.assertThisInitialized,r=t.asyncToGenerator,o=t.regeneratorRuntime},function(t){l=t.cclegacy,a=t._decorator,u=t.Button,c=t.Label,d=t.screen,h=t.sys,p=t.Component},function(t){f=t.ServiceWorker}],execute:function(){var I,m,b,g,P,w,v,y,L,B,W;l._RF.push({},"72048sXgK5KG4XP/f3z1DCG","PWAInstaller",void 0);var A=a.ccclass,C=a.property;t("PWAInstaller",(I=A("PWAInstaller"),m=C(u),b=C(f),g=C(c),P=C(c),I((y=e((v=function(t){function e(){for(var e,n=arguments.length,r=new Array(n),o=0;o<n;o++)r[o]=arguments[o];return e=t.call.apply(t,[this].concat(r))||this,s(e,"installButton",y,i(e)),s(e,"serviceWorker",L,i(e)),s(e,"versionLabel",B,i(e)),s(e,"statusLabel",W,i(e)),e.deferredPrompt=null,e.isInstalled=!1,e}n(e,t);var l=e.prototype;return l.start=function(){var t=this;this.deferredPrompt=window.deferredPrompt,this.isInstalled=window.isInstalled,this.checkPWAInstallation(),this.setupEventListeners(),this.updateUI(),this.versionLabel.string="v0.0.13",d.on("window-resize",(function(){setTimeout((function(){console.log("window-resize"),t.checkPWAInstallation(),t.updateUI()}),100)}),this)},l.checkPWAInstallation=function(){h.isBrowser&&(window.matchMedia("(display-mode: standalone)").matches&&(this.isInstalled=!0),console.log("isInstalled",this.isInstalled),console.log("브라우저 환경:",h.isBrowser),console.log("display-mode standalone:",window.matchMedia("(display-mode: standalone)").matches))},l.setupEventListeners=function(){var t=this;this.installButton&&this.installButton.node.on(u.EventType.CLICK,this.onInstallButtonClick,this),h.isBrowser&&(window.addEventListener("beforeinstallprompt",(function(e){e.preventDefault(),t.deferredPrompt=e,t.updateUI()})),window.addEventListener("appinstalled",(function(){t.isInstalled=!0,t.updateUI(),console.log("PWA가 성공적으로 설치되었습니다!")})))},l.onInstallButtonClick=function(){this.deferredPrompt?this.showInstallPrompt():this.isInstalled?this.showAlreadyInstalledMessage():this.showInstallInstructions()},l.showInstallPrompt=function(){var t=r(o().mark((function t(){var e,n;return o().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.deferredPrompt){t.next=2;break}return t.abrupt("return");case 2:return t.prev=2,this.deferredPrompt.prompt(),t.next=6,this.deferredPrompt.userChoice;case 6:e=t.sent,n=e.outcome,console.log("outcome",n,this.deferredPrompt),"accepted"===n?(console.log("사용자가 PWA 설치를 수락했습니다"),this.statusLabel.string="설치 중...",this.deferredPrompt=null):(console.log("사용자가 PWA 설치를 거부했습니다"),this.statusLabel.string="설치가 취소되었습니다"),this.updateUI(),t.next=17;break;case 13:t.prev=13,t.t0=t.catch(2),console.error("PWA 설치 중 오류 발생:",t.t0),this.statusLabel.string="설치 중 오류가 발생했습니다";case 17:case"end":return t.stop()}}),t,this,[[2,13]])})));return function(){return t.apply(this,arguments)}}(),l.showAlreadyInstalledMessage=function(){var t=this;this.statusLabel.string="PWA가 이미 설치되어 있습니다!",setTimeout((function(){t.updateUI()}),2e3)},l.showInstallInstructions=function(){var t=this;this.statusLabel.string="브라우저에서 설치 옵션을 찾아주세요",setTimeout((function(){t.updateUI()}),3e3)},l.updateUI=function(){this.installButton&&this.statusLabel&&(this.isInstalled?(this.installButton.interactable=!1,this.installButton.node.getComponentInChildren(c).string="이미 설치됨",this.statusLabel.string="PWA가 설치되어 있습니다"):this.deferredPrompt?(this.installButton.interactable=!0,this.installButton.node.getComponentInChildren(c).string="PWA 설치",this.statusLabel.string="설치할 준비가 되었습니다"):(this.installButton.interactable=!1,this.installButton.node.getComponentInChildren(c).string="설치 불가",this.statusLabel.string="이미 설치되어있거나 설치 할수 없습니다"))},l.isPWAInstallable=function(){return null!==this.deferredPrompt&&!this.isInstalled},l.refreshInstallationStatus=function(){this.checkPWAInstallation(),this.updateUI()},l.onDestroy=function(){this.installButton&&this.installButton.node.off(u.EventType.CLICK,this.onInstallButtonClick,this)},e}(p)).prototype,"installButton",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(v.prototype,"serviceWorker",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),B=e(v.prototype,"versionLabel",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),W=e(v.prototype,"statusLabel",[P],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),w=v))||w));l._RF.pop()}}}));

System.register("chunks:///_virtual/ServiceWorker.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,n,i,r,o,s,u,c,a,h,p;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,i=t.initializerDefineProperty,r=t.assertThisInitialized,o=t.asyncToGenerator,s=t.regeneratorRuntime},function(t){u=t.cclegacy,c=t._decorator,a=t.Button,h=t.Label,p=t.Component}],execute:function(){var l,f,b,g,v,d,k;u._RF.push({},"95ee2quKp5OuoJ6boIZGaGc","ServiceWorker",void 0);var w=c.ccclass,B=c.property;t("ServiceWorker",(l=w("ServiceWorker"),f=B(a),b=B(a),l((d=e((v=function(t){function e(){for(var e,n=arguments.length,o=new Array(n),s=0;s<n;s++)o[s]=arguments[s];return e=t.call.apply(t,[this].concat(o))||this,i(e,"subscribeButton",d,r(e)),i(e,"testPushButton",k,r(e)),e.registration=null,e}n(e,t);var u=e.prototype;return u.start=function(){this.registerServiceWorker(),this.setupEventListeners()},u.registerServiceWorker=function(){this.registration=window.registration,this.checkPushNotificationSupport()},u.checkPushNotificationSupport=function(){"PushManager"in window?(console.log("✅ 푸시 알림 지원됨"),this.checkPushSubscription()):console.log("❌ 푸시 알림 지원되지 않음")},u.checkPushSubscription=function(){var t=o(s().mark((function t(){var e;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.registration){t.next=2;break}return t.abrupt("return");case 2:return t.prev=2,t.next=5,this.registration.pushManager.getSubscription();case 5:(e=t.sent)?(console.log("✅ 이미 푸시 구독됨:",e),this.updateSubscribeButton(!0)):(console.log("⏳ 푸시 구독 필요"),this.updateSubscribeButton(!1)),t.next=12;break;case 9:t.prev=9,t.t0=t.catch(2),console.log("❌ 푸시 구독 상태 확인 실패:",t.t0);case 12:case"end":return t.stop()}}),t,this,[[2,9]])})));return function(){return t.apply(this,arguments)}}(),u.subscribeToPushNotifications=function(){var t=o(s().mark((function t(){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return console.log("🔔 테스트 푸시 알림 구독"),this.showSubscribeFeedback(!0),this.updateSubscribeButton(!0),t.abrupt("return",!0);case 4:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),u.unsubscribeFromPushNotifications=function(){var t=o(s().mark((function t(){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return console.log("🔔 테스트 푸시 알림 구독 해제"),this.showSubscribeFeedback(!1),this.updateSubscribeButton(!1),t.abrupt("return",!0);case 4:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),u.showSubscribeFeedback=function(t){if(this.subscribeButton){var e=this.subscribeButton.node.getComponentInChildren(h);if(e){e.string;e.string=t?"구독됨!":"해제됨!"}}},u.updateSubscribeButton=function(t){if(this.subscribeButton){var e=this.subscribeButton.node.getComponentInChildren(h);e&&(t?(e.string="푸시 해제",console.log('✅ 구독 완료: 버튼이 "푸시 해제"로 변경됨')):(e.string="푸시 구독",console.log('✅ 구독 해제 완료: 버튼이 "푸시 구독"으로 변경됨'))),this.subscribeButton.interactable=!0}},u.setupEventListeners=function(){this.subscribeButton&&this.subscribeButton.node.on(a.EventType.CLICK,this.onSubscribeButtonClick,this),this.testPushButton&&this.testPushButton.node.on(a.EventType.CLICK,this.onTestPushButtonClick,this)},u.onSubscribeButtonClick=function(){console.log("🔔 구독 버튼 클릭됨"),this.checkCurrentSubscriptionAndToggle()},u.checkCurrentSubscriptionAndToggle=function(){var t=o(s().mark((function t(){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,this.getSubscriptionStatus();case 3:if(!t.sent){t.next=10;break}return console.log("🔄 구독 해제 중..."),t.next=8,this.unsubscribeFromPushNotifications();case 8:t.next=13;break;case 10:return console.log("🔄 구독 중..."),t.next=13,this.subscribeToPushNotifications();case 13:t.next=18;break;case 15:t.prev=15,t.t0=t.catch(0),console.error("❌ 구독 상태 토글 실패:",t.t0);case 18:case"end":return t.stop()}}),t,this,[[0,15]])})));return function(){return t.apply(this,arguments)}}(),u.onTestPushButtonClick=function(){console.log("🧪 테스트 푸시 버튼 클릭됨"),this.showTestPushNotification(),this.showTestButtonFeedback()},u.showTestButtonFeedback=function(){if(this.testPushButton){var t,e=(null==(t=this.testPushButton.node.getComponentInChildren(h))?void 0:t.string)||"테스트 푸시",n=this.testPushButton.node.getComponentInChildren(h);n&&(n.string="전송됨!",setTimeout((function(){n.string=e}),2e3))}},u.showTestPushNotification=function(){var t=this;"Notification"in window?"granted"===Notification.permission?this.createTestNotification():"denied"!==Notification.permission?Notification.requestPermission().then((function(e){"granted"===e?t.createTestNotification():console.log("❌ 알림 권한이 거부됨")})):console.log("❌ 알림 권한이 거부됨"):console.log("❌ 이 브라우저는 알림을 지원하지 않습니다")},u.createTestNotification=function(){var t;console.log("🔔 테스트 알림 생성"),(t=this.registration.showNotification("🚀 PWA 테스트 알림!",{body:"서버 연동 없이 로컬에서 푸시 알림이 작동합니다!",icon:"/pwacocos/icon.png",badge:"/pwacocos/icon.png",tag:"test-notification",requireInteraction:!1,silent:!1,data:{type:"test",timestamp:Date.now()}})).onclick=function(e){console.log("🔔 테스트 알림 클릭됨:",e),t.close(),window.focus&&window.focus()},setTimeout((function(){t.close()}),5e3),console.log("✅ 테스트 푸시 알림 전송됨")},u.showMultipleTestNotifications=function(t){var e=this;void 0===t&&(t=3);for(var n=0;n<t;n++)setTimeout((function(){e.createTestNotification()}),1e3*n)},u.getSubscriptionStatus=function(){var t=o(s().mark((function t(){var e;return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.registration){t.next=2;break}return t.abrupt("return",!1);case 2:return t.prev=2,t.next=5,this.registration.pushManager.getSubscription();case 5:return e=t.sent,t.abrupt("return",null!==e);case 9:return t.prev=9,t.t0=t.catch(2),console.log("구독 상태 확인 실패:",t.t0),t.abrupt("return",!1);case 13:case"end":return t.stop()}}),t,this,[[2,9]])})));return function(){return t.apply(this,arguments)}}(),u.isServiceWorkerRegistered=function(){return null!==this.registration},u.isPushNotificationSupported=function(){return"PushManager"in window&&"serviceWorker"in navigator},u.reRegisterServiceWorker=function(){var t=o(s().mark((function t(){return s().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(!this.registration){t.next=3;break}return t.next=3,this.registration.unregister();case 3:this.registerServiceWorker();case 4:case"end":return t.stop()}}),t,this)})));return function(){return t.apply(this,arguments)}}(),u.onDestroy=function(){this.subscribeButton&&this.subscribeButton.node.off(a.EventType.CLICK,this.onSubscribeButtonClick,this),this.testPushButton&&this.testPushButton.node.off(a.EventType.CLICK,this.onTestPushButtonClick,this)},e}(p)).prototype,"subscribeButton",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),k=e(v.prototype,"testPushButton",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),g=v))||g));u._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,