System.register("chunks:///_virtual/main",["./PWAInstaller.ts"],(function(){return{setters:[null],execute:function(){}}}));

System.register("chunks:///_virtual/PWAInstaller.ts",["./rollupPluginModLoBabelHelpers.js","cc"],(function(t){var e,n,s,o,l,i,a,r,c,u,h,d;return{setters:[function(t){e=t.applyDecoratedDescriptor,n=t.inheritsLoose,s=t.initializerDefineProperty,o=t.assertThisInitialized,l=t.asyncToGenerator,i=t.regeneratorRuntime},function(t){a=t.cclegacy,r=t._decorator,c=t.Button,u=t.Label,h=t.sys,d=t.Component}],execute:function(){var p,g,f,m,I,P,b,v,L;a._RF.push({},"72048sXgK5KG4XP/f3z1DCG","PWAInstaller",void 0);var A=r.ccclass,y=r.property;t("PWAInstaller",(p=A("PWAInstaller"),g=y(c),f=y(u),m=y(u),p((b=e((P=function(t){function e(){for(var e,n=arguments.length,l=new Array(n),i=0;i<n;i++)l[i]=arguments[i];return e=t.call.apply(t,[this].concat(l))||this,s(e,"installButton",b,o(e)),s(e,"versionLabel",v,o(e)),s(e,"statusLabel",L,o(e)),e.deferredPrompt=null,e.isInstalled=!1,e}n(e,t);var a=e.prototype;return a.start=function(){this.checkPWAInstallation(),this.setupEventListeners(),this.updateUI(),this.versionLabel.string="v4.0.0",this.checkImmediateInstallPrompt()},a.checkPWAInstallation=function(){h.isBrowser&&(window.matchMedia("(display-mode: standalone)").matches&&(this.isInstalled=!0),console.log("isInstalled",this.isInstalled),console.log("브라우저 환경:",h.isBrowser),console.log("display-mode standalone:",window.matchMedia("(display-mode: standalone)").matches),this.validatePWARequirements())},a.validatePWARequirements=function(){var t=this;console.log("🔍 PWA 요구사항 검증 시작...");var e=document.querySelector('link[rel="manifest"]');e?(console.log("✅ 매니페스트 링크 발견:",e.href),this.statusLabel.string="PWA 요구사항 검증 중...",fetch(e.href).then((function(t){if(console.log("📋 매니페스트 응답 상태:",t.status),t.ok)return t.json();throw new Error("매니페스트 로드 실패: "+t.status)})).then((function(e){console.log("📋 매니페스트 내용:",e),console.log("🖼️ 아이콘 정보:",e.icons);var n=["name","short_name","start_url","display"].filter((function(t){return!e[t]}));if(n.length>0)return console.log("❌ 누락된 필수 필드:",n),void(t.statusLabel.string="매니페스트 누락: "+n.join(", "));if(e.icons&&e.icons.length>0){var s=e.icons[0].src;console.log("🖼️ 아이콘 경로:",s),fetch(s,{method:"HEAD"}).then((function(e){console.log("🖼️ 아이콘 파일 상태:",e.status),e.ok?(console.log("✅ 아이콘 파일 정상"),t.statusLabel.string="PWA 요구사항 검증 완료",t.checkInstallability()):(console.log("❌ 아이콘 파일 문제:",e.status),t.statusLabel.string="아이콘 파일 오류: "+e.status)})).catch((function(e){console.log("❌ 아이콘 파일 확인 실패:",e),t.statusLabel.string="아이콘 파일 확인 실패"}))}else console.log("❌ 아이콘 정보가 없습니다"),t.statusLabel.string="매니페스트에 아이콘 정보가 없습니다"})).catch((function(e){console.log("❌ 매니페스트 파싱 실패:",e),t.statusLabel.string="매니페스트 파싱 실패"}))):(console.log("❌ 매니페스트 링크를 찾을 수 없습니다"),this.statusLabel.string="매니페스트 파일을 찾을 수 없습니다")},a.checkInstallability=function(){this.deferredPrompt?(console.log("🎯 PWA 설치 준비 완료!"),this.statusLabel.string="설치할 준비가 되었습니다"):(console.log("⏳ PWA 설치 이벤트 대기 중..."),this.statusLabel.string="PWA 설치 이벤트 대기 중...")},a.checkImmediateInstallPrompt=function(){var t=this;h.isBrowser&&(console.log("🔍 즉시 설치 프롬프트 확인 중..."),"getInstalledRelatedApps"in navigator&&navigator.getInstalledRelatedApps().then((function(e){console.log("📱 설치된 관련 앱:",e),e.length>0&&(t.isInstalled=!0,console.log("✅ PWA가 이미 설치되어 있음"),t.updateUI())})).catch((function(t){console.log("📱 설치된 앱 확인 실패:",t)})),window.matchMedia("(display-mode: standalone)").matches&&(this.isInstalled=!0,console.log("✅ PWA가 standalone 모드로 실행 중"),this.updateUI()))},a.setupEventListeners=function(){var t=this;this.installButton&&this.installButton.node.on(c.EventType.CLICK,this.onInstallButtonClick,this),h.isBrowser&&(console.log("🔧 이벤트 리스너 설정 중..."),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(function(){t.checkDelayedInstallPrompt()})):this.checkDelayedInstallPrompt(),window.addEventListener("beforeinstallprompt",(function(e){console.log("🎯 beforeinstallprompt 이벤트 발생!"),e.preventDefault(),t.deferredPrompt=e,t.updateUI()})),window.addEventListener("appinstalled",(function(){console.log("🎉 appinstalled 이벤트 발생!"),t.isInstalled=!0,t.updateUI(),console.log("PWA가 성공적으로 설치되었습니다!")})))},a.checkDelayedInstallPrompt=function(){var t=this;console.log("🔍 지연된 설치 프롬프트 확인 중..."),setTimeout((function(){t.deferredPrompt||t.isInstalled||(console.log("⏳ PWA 설치 이벤트 대기 중... (지연 확인)"),t.statusLabel.string="PWA 설치 이벤트 대기 중...")}),1e3)},a.onInstallButtonClick=function(){this.deferredPrompt?this.showInstallPrompt():this.isInstalled?this.showAlreadyInstalledMessage():this.showInstallInstructions()},a.showInstallPrompt=function(){var t=l(i().mark((function t(){var e;return i().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(this.deferredPrompt){t.next=2;break}return t.abrupt("return");case 2:return t.prev=2,this.deferredPrompt.prompt(),t.next=6,this.deferredPrompt.userChoice;case 6:e=t.sent,"accepted"===e.outcome?(console.log("사용자가 PWA 설치를 수락했습니다"),this.statusLabel.string="설치 중...",this.installButton.node.active=!1):(console.log("사용자가 PWA 설치를 거부했습니다"),this.statusLabel.string="설치가 취소되었습니다"),this.deferredPrompt=null,this.updateUI(),t.next=17;break;case 13:t.prev=13,t.t0=t.catch(2),console.error("PWA 설치 중 오류 발생:",t.t0),this.statusLabel.string="설치 중 오류가 발생했습니다";case 17:case"end":return t.stop()}}),t,this,[[2,13]])})));return function(){return t.apply(this,arguments)}}(),a.showAlreadyInstalledMessage=function(){var t=this;this.statusLabel.string="PWA가 이미 설치되어 있습니다!",setTimeout((function(){t.updateUI()}),2e3)},a.showInstallInstructions=function(){var t=this;this.statusLabel.string="브라우저에서 설치 옵션을 찾아주세요",setTimeout((function(){t.updateUI()}),3e3)},a.updateUI=function(){this.installButton&&this.statusLabel&&(console.log("isInstalled",this.isInstalled),console.log("deferredPrompt",this.deferredPrompt),this.isInstalled?(this.installButton.interactable=!1,this.installButton.node.active=!1,this.installButton.node.getComponentInChildren(u).string="이미 설치됨",this.statusLabel.string="PWA가 설치되어 있습니다"):this.deferredPrompt?(this.installButton.interactable=!0,this.installButton.node.active=!0,this.installButton.node.getComponentInChildren(u).string="PWA 설치",this.statusLabel.string="설치할 준비가 되었습니다"):(this.installButton.interactable=!1,this.installButton.node.active=!1,this.installButton.node.getComponentInChildren(u).string="설치 불가",this.statusLabel.string="이 브라우저에서는 PWA 설치가 지원되지 않습니다"))},a.isPWAInstallable=function(){return null!==this.deferredPrompt&&!this.isInstalled},a.refreshInstallationStatus=function(){this.checkPWAInstallation(),this.updateUI()},a.onDestroy=function(){this.installButton&&this.installButton.node.off(c.EventType.CLICK,this.onInstallButtonClick,this)},e}(d)).prototype,"installButton",[g],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),v=e(P.prototype,"versionLabel",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),L=e(P.prototype,"statusLabel",[m],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),I=P))||I));a._RF.pop()}}}));

(function(r) {
  r('virtual:///prerequisite-imports/main', 'chunks:///_virtual/main'); 
})(function(mid, cid) {
    System.register(mid, [cid], function (_export, _context) {
    return {
        setters: [function(_m) {
            var _exportObj = {};

            for (var _key in _m) {
              if (_key !== "default" && _key !== "__esModule") _exportObj[_key] = _m[_key];
            }
      
            _export(_exportObj);
        }],
        execute: function () { }
    };
    });
});